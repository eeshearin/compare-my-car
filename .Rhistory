install.packages("KernSmooth")
install.package{"swirl"}
install.package(swirl)
add2(3,5)
add2(5,3)
add2 <- function(x,y) {
x + y
}
add2(3,5)
above <- function(x, n) {
use <- x > n
x[use]
}
x <- 1:20
above(x, 12)
> above <- function(x, n = 10) {
above <- function(x, n = 10) {
source('~/.active-rstudio-document')
columnmean(hw1_data.csv)
library(swirl)
rm(list = ls())
swirl()
View(top_counts)
play()
top_counts <- filter(pack_sum, count > 679)
View(top_counts)
nxt()
atop_counts_sorted <- arrange(top_counts, desc(count))
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
students3
?gather
submit()
?spread
submit()
submit()
submit()
submit()
submit()
try extract_numeric("class5")
extract_numeric("class5")
submit()
submit()
students4
submit()
submit()
submit()
passe
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
bind_rows(passed, failed)
sat
submit()
submit()
?separate
submit()
submit()
submit()
submit()
submit()
submit()
Sys.getlocale("LC_TIME"
)
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd(ymd("192012"))
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(now())
update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(hours = 17, minutes = 34)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
stopwatch()
install.packages("devtools")
library(devtools)
install_github('slidify', 'ramnathv')
library(datasets)
?mtcars
library(shiny)
?shiny
library(dplyr)
?dplyr
datasets(mtcars)
library(datasets)
data("mtcars")
?mtcars
fit <- lm(mpg ~ am)
fit <- lm(mpg ~ am, data = mtcars)
summary(fit)
par(mfrow = c(3,3))
plot(fit)
par(mfrow = c(2,2))
plot(fit)
fit <- lm(mpg ~ factor(am), data = mtcars)
summary(fit)
plot(fit)
plot(mtcars$mpg, mtcars$am)
abline(v = mean(mtcars$mpg))
library(ggplot)
library(ggplot2)
g <- ggplot(aes(mtcars$mpg, mtcars$am)
)
g <- ggplot(mtcars$mpg, mtcars$am, aes = geom_dotplot())
g <- ggplot(mtcars$mpg, mtcars$am, aes = geom_dotplot(aes()))
g <- ggplot(data = mtcars, mapping = aes(mpg, am))
g
g <- g + geom_point(aes(mtcars$mpg, mtcars$am))
g
g <- g + geom_abline(v = mean(mtcars$mpg))
g <- g + geom_vline(mean(mtcars$mpg))
g <- g + geom_vline(xintercept = mean(mtcars$mpg))
g
g <- g + geom_smooth(method = "lm")
g
aggdata <-aggregate(mtcars, by=list(cyl,vs),
FUN=mean, na.rm=TRUE)
dat <- aggregate(mtcars, by = (mtcars$am), FUN = mean(), na.rm = TRUE)
dat <- aggregate(mtcars, by = (mtcars$am), FUN = mean, na.rm = TRUE)
dat <- aggregate(mtcars, by = list(mtcars$am), FUN = mean, na.rm = TRUE)
dat
dat[,1]
dat[,2]
head(mtcars)
d <- cbind(mtcars$mpg, mtcars$am)
library(dplyr)
d <- arrange(d, am, mpg)
head(d)
d <- data.frame(d)
class(d)
d <- arrange(d, am, mpg)
colnames(d) <- c("mpg", "am")
head(d)
d <- arrange(d, am, mpg)
head(d)
mean(d$am)
d
hist(d[1:19, 1])
h <- hist(d[1:19, 1])
h
h2 <- hist(d[20:32, 1])
fit2 <- lm(mpg ~ ., mtcars)
summary(fit)
summary(fit2)
fit2 <- lm(mpg ~ am + ., mtcars)
summary(fit2)
fit3 <- lm(mpg ~ am + wt, mtcars)
summary(fit3)
fit4 <- lm(wt ~ am, mtcars)
summary(fit4)
plot(mtcar$wt, mtcars$am)
plot(mtcars$wt, mtcars$am)
plot(mtcars$am, mtcars$wt)
par(mfrow = c(1,1))
plot(mtcars$am, mtcars$wt)
hist(mtcars$mpg)
hist(d[1:19, 1])
plot(mtcars$wt, mtcars$am)
?dfbetas
fit3 <- lm(mpg ~ factor(am) + wt, mtcars)
dfbetas(fit3)
summary(fit3)
source('~/Desktop/school/coursera/courses/09_DevelopingDataProducts/slidify/test_slidify1/first_test/cmc/plotfix.R')
source('~/Desktop/school/coursera/courses/09_DevelopingDataProducts/slidify/test_slidify1/first_test/cmc/plotfix.R')
source('~/Desktop/school/coursera/courses/09_DevelopingDataProducts/slidify/test_slidify1/first_test/cmc/plotfix.R')
source('~/Desktop/school/coursera/courses/09_DevelopingDataProducts/slidify/test_slidify1/first_test/cmc/plotfix.R')
source('~/Desktop/school/coursera/courses/09_DevelopingDataProducts/slidify/test_slidify1/first_test/cmc/plotfix.R')
source('~/Desktop/school/coursera/courses/09_DevelopingDataProducts/slidify/test_slidify1/first_test/cmc/plotfix.R')
source('~/Desktop/school/coursera/courses/09_DevelopingDataProducts/slidify/test_slidify1/first_test/cmc/plotfix.R')
source('~/Desktop/school/coursera/courses/09_DevelopingDataProducts/slidify/test_slidify1/first_test/cmc/plotfix.R')
source('~/Desktop/school/coursera/courses/09_DevelopingDataProducts/slidify/test_slidify1/first_test/cmc/plotfix.R')
source('~/Desktop/school/coursera/courses/09_DevelopingDataProducts/slidify/test_slidify1/first_test/cmc/plotfix.R')
source('~/Desktop/school/coursera/courses/09_DevelopingDataProducts/slidify/test_slidify1/first_test/cmc/plotfix.R')
source('~/Desktop/school/coursera/courses/09_DevelopingDataProducts/slidify/test_slidify1/first_test/cmc/plotfix.R')
source('~/Desktop/school/coursera/courses/09_DevelopingDataProducts/slidify/test_slidify1/first_test/cmc/plotfix.R')
source('~/Desktop/school/coursera/courses/09_DevelopingDataProducts/slidify/test_slidify1/first_test/cmc/plotfix.R')
source('~/Desktop/school/coursera/courses/09_DevelopingDataProducts/slidify/test_slidify1/first_test/cmc/plotfix.R')
fit <- lm(mpg ~ wt, mtcars)
coef(fit)
coef(fit)[1]
source('~/Desktop/school/coursera/courses/09_DevelopingDataProducts/slidify/test_slidify1/first_test/cmc/plotfix.R')
source('~/Desktop/school/coursera/courses/09_DevelopingDataProducts/slidify/test_slidify1/first_test/cmc/plotfix.R')
source('~/Desktop/school/coursera/courses/09_DevelopingDataProducts/slidify/test_slidify1/first_test/cmc/plotfix.R')
rn
rn
runApp('Desktop/school/coursera/courses/09_DevelopingDataProducts/shiny/mtcars-predict')
ofe <- mtcars[rn, 1]
owt <- mtcars[rn, 6]
ofe
owt
plot(x, y, type = "p", main = "Comparison of your selected cars", xlab = "weight (thousands of pounds)", ylab = "fuel economy (mpg)", cex = 5)
abline(fit)
points(y = pfe, x = pwt, col = "blue", pch = 4, cex = 6)
points(y = ofe, x = owt, col = "red", pch = 4, cex = 6)
runApp('Desktop/school/coursera/courses/09_DevelopingDataProducts/shiny/mtcars-predict')
runApp('Desktop/school/coursera/courses/09_DevelopingDataProducts/shiny/mtcars-predict')
?par
widgets     : []            # {mathjax, quiz, bootstrap}
library(knitr)
publish(title = 'predict-my-mpg', 'index.html', host = 'rpubs')
library(slidify)
library(slidifyLibraries)
publish(title = 'predict-my-mpg', 'index.html', host = 'rpubs')
setwd("~/Desktop/school/coursera/courses/09_DevelopingDataProducts/slidify/test_slidify1/first_test/cmc")
publish(title = 'predict-my-mpg', 'index.html', host = 'rpubs')
library(slidify)
author("mydeck")
